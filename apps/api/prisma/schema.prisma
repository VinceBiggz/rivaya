// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(cuid())
  email          String   @unique
  fullName       String   @map("full_name")
  passwordHash   String   @map("password_hash")
  role           String   @default("user")
  profilePicture String?  @map("profile_picture")
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  // Relations
  ownedGroups    Group[]  @relation("GroupOwner")
  groupMembers   GroupMember[]
  sentMessages   Message[]

  @@map("users")
}

model Group {
  id          String   @id @default(cuid())
  name        String
  description String?
  category    String
  privacy     String   @default("private")
  coverImage  String?
  ownerId     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  owner       User           @relation("GroupOwner", fields: [ownerId], references: [id])
  members     GroupMember[]
  messages    Message[]

  @@map("groups")
}

model GroupMember {
  id      String @id @default(cuid())
  groupId String
  userId  String
  role    String @default("member")
  joinedAt DateTime @default(now())

  // Relations
  group   Group @relation(fields: [groupId], references: [id], onDelete: Cascade)
  user    User  @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([groupId, userId])
  @@map("group_members")
}

model Message {
  id        String   @id @default(cuid())
  groupId   String
  senderId  String
  content   String
  messageType String @default("text")
  createdAt DateTime @default(now())

  // Relations
  group   Group @relation(fields: [groupId], references: [id], onDelete: Cascade)
  sender  User  @relation(fields: [senderId], references: [id], onDelete: Cascade)

  @@map("messages")
}
