

services:
  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: rivaya_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - rivaya_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Supabase Local Development (Isolated for debugging)
  supabase:
    image: supabase/postgres:15.1.0.117
    container_name: rivaya_supabase
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: postgres
      JWT_SECRET: your-super-secret-jwt-token-with-at-least-32-characters-long
      POSTGRES_HOST: supabase
      POSTGRES_PORT: 5432
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
    ports:
      - "54322:5432"
    volumes:
      - supabase_data:/var/lib/postgresql/data
      - ./supabase:/supabase
    networks:
      - rivaya_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Next.js Web Application
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      target: base  # Use base stage for development
    container_name: rivaya_web
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@supabase:5432/postgres
      - SUPABASE_URL=http://supabase:54321
      - SUPABASE_ANON_KEY=your-anon-key
      - REDIS_URL=redis://redis:6379
      - NEXT_PUBLIC_API_URL=http://api:3001
    volumes:
      - ./apps/web:/app/apps/web
      - ./packages/shared:/app/packages/shared
      - /app/apps/web/node_modules
      - /app/packages/shared/node_modules
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - rivaya_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # NestJS API Application
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
      target: base  # Use base stage for development
    container_name: rivaya_api
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@supabase:5432/postgres
      - SUPABASE_URL=http://supabase:54321
      - SUPABASE_ANON_KEY=your-anon-key
      - REDIS_URL=redis://redis:6379
      - PORT=3001
      - JWT_SECRET=your-super-secret-jwt-token-with-at-least-32-characters-long
      - STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key
      - STRIPE_WEBHOOK_SECRET=whsec_your_stripe_webhook_secret
    volumes:
      - ./apps/api:/app/apps/api
      - ./packages/shared:/app/packages/shared
      - /app/apps/api/node_modules
      - /app/packages/shared/node_modules
    depends_on:
      redis:
        condition: service_healthy
      supabase:
        condition: service_healthy
    networks:
      - rivaya_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Expo Mobile Development Server
  mobile:
    build:
      context: .
      dockerfile: apps/mobile/Dockerfile
    container_name: rivaya_mobile
    restart: unless-stopped
    ports:
      - "8081:8081"   # Metro bundler (native)
      - "19006:19006" # Web preview
    volumes:
      - ./apps/mobile:/app/apps/mobile
      - ./packages/shared:/app/packages/shared
      - /app/apps/mobile/node_modules
      - /app/packages/shared/node_modules
    environment:
      - NODE_ENV=development
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
      - REACT_NATIVE_PACKAGER_HOSTNAME=0.0.0.0
      - CHOKIDAR_USEPOLLING=true
    stdin_open: true
    tty: true
    networks:
      - rivaya_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: rivaya_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      web:
        condition: service_healthy
      api:
        condition: service_healthy
    networks:
      - rivaya_network

volumes:
  redis_data:
    driver: local
  supabase_data:
    driver: local

networks:
  rivaya_network:
    driver: bridge
